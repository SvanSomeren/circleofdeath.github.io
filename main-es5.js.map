{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/appmodule.service.ts","webpack:///src/app/circle/circle.component.ts","webpack:///src/app/circle/circle.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","appmoduleService","started","gameStarted","startGame","subscribe","data","cards","card","selected","console","log","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AppmoduleService","http","request","post","providedIn","CircleComponent","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCA;;AACE;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AACrC;;AACF;;AACF;;;;;;AAII;;AACE;;AAEE;;AAAyB;;AAA6B;;AACtD;;AAAuB;;AACR;;AACjB;;AACF;;;;;;AAJ6B;;AAAA;;AACF;;AAAA;;;;;;AAKzB;;AACE;;AACF;;;;;;;;AAZJ;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AAQA;;AAKF;;;;;;;;AAbO;;AAAA,2FAAuC,UAAvC,EAAuC,GAAvC;;;;QDDIM,Y;;;AAMX,4BAAoBC,gBAApB,EAAwD;AAAA;;AAApC,aAAAA,gBAAA,GAAAA,gBAAA;AALpB,aAAAC,OAAA,GAAU,6BAAV;AACA,aAAAC,WAAA,GAAc,IAAd;AAI2D;;;;oCAExC;AAAA;;AACjB;AACA,eAAKF,gBAAL,CAAsBG,SAAtB,GAAkCC,SAAlC,CAA4C,UAACC,IAAD,EAAiB;AAC3D,iBAAI,CAACH,WAAL,GAAmB,KAAnB;AACA,iBAAI,CAACD,OAAL,GAAe,qBAAf;AACA,iBAAI,CAACK,KAAL,GAAaD,IAAb;AACD,WAJD;AAKD;;;iCAEeE,I,EAAM;AACpB;AACAA,cAAI,CAACC,QAAL,GAAgB,IAAhB;AACAC,iBAAO,CAACC,GAAR,CAAY,aAAZ;AACD;;;;;;;uBArBUX,Y,EAAY,oI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,oX;AAAA;AAAA;ACRzB;;AACA;;AAKA;;AACA;;AACE;;AAeF;;;;AAvBA;;AACK;;AAAA;;AAOE;;AAAA;;;;;;;;;sEDAMA,Y,EAAY;cALxB,uDAKwB;eALd;AACTY,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA0BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBARJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,4FANO,CAQI;;;;0HAGFA,S,EAAS;AAAA,uBAdlB,2DAckB,EAblB,wEAakB;AAbH,kBAGf,uEAHe,EAIf,oEAJe,EAKf,qEALe,EAMf,0DANe,EAOf,kEAPe,EAQf,4FARe;AAaG,O;AALK,K;;;;;sEAKdA,S,EAAS;cAhBrB,sDAgBqB;eAhBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,CADN;AAKRjB,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,4FANO,CALD;AAaRkB,mBAAS,EAAE,EAbH;AAcRC,mBAAS,EAAE,CAAC,2DAAD;AAdH,S;AAgBY,Q;;;;;;;;;;;;;;;;;;AC1BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,gB;;;AAEX,gCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;oCAEtB;AACjB,cAAIC,OAAO,GAAG,EAAd;AACA,iBAAO,KAAKD,IAAL,CAAUE,IAAV,wDAAsED,OAAtE,CAAP;AACD;;;;;;;uBAPUF,gB,EAAgB,uH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVI,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;ACN7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,e;;;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA;AAAA;ACP5B;;AAAG;;AAAa;;;;;;;;sEDOHA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTZ,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMW,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIlB,OAAO,CAACmB,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\r\nimport { AppmoduleService } from \"./appmodule.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  started = \"Game has not started yet :(\";\r\n  gameStarted = true;\r\n  cardAmount;\r\n  cards;\r\n\r\n  constructor(private appmoduleService: AppmoduleService) { }\r\n\r\n  public startGame() {\r\n    // call server with service start game update start using websockets\r\n    this.appmoduleService.startGame().subscribe((data: any[]) => {\r\n      this.gameStarted = false;\r\n      this.started = \"Game has started :D\";\r\n      this.cards = data;\r\n    });\r\n  }\r\n\r\n  public pickCard(card) {\r\n    // get random card from server and display it i guess\r\n    card.selected = true;\r\n    console.log(\"picked card\");\r\n  }\r\n}\r\n","{{started}}\n<div *ngIf=\"gameStarted;\">\n  <button class=\"createButton shadow-sm\" (click)=\"startGame()\">\n    Start\n  </button>\n</div>\n<hr />\n<div class=\"row\">\n  <div *ngFor=\"let card of cards\" (click)=\"pickCard(card)\">\n    <div *ngIf=\"card.selected; else notSelected\">\n      <div class=\"card\" style=\"width: 12rem;\">\n        <!-- <img class=\"card-img-top\" style=\"width: 12rem;\" src=\"../assets/cardbackSmall.png\" alt=\"Card image cap\"> -->\n        <div class=\"card-header\">{{card.type}} {{card.number}}</div>\n        <div class=\"card-body\">Regel:\n          {{card.rule}}</div>\n      </div>\n    </div>\n    <ng-template #notSelected>\n      <div class=\" card\">\n        <img class=\"card-img-top\" style=\"width: 12rem;\" src=\"../assets/cardbackSmall.png\" alt=\"Card image cap\">\n      </div>\n    </ng-template>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CircleComponent } from './circle/circle.component';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\"\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CircleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppmoduleService {\n\n  constructor(private http: HttpClient) { }\n\n  public startGame() {\n    var request = {};\n    return this.http.post(`https://circleofdeath.herokuapp.com/v1/circle/start`, request);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-circle',\n  templateUrl: './circle.component.html',\n  styleUrls: ['./circle.component.css']\n})\nexport class CircleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>circle works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}